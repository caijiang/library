buildscript {
    ext.javaee_version = "7.0"
    ext.kotlin_version = '1.3.11'
    ext.hibernate_version = '5.2.10.Final'

    repositories {
        mavenCentral()
        maven {
            url "https://plugins.gradle.org/m2/"
        }
    }
    dependencies {
        classpath "org.jetbrains.kotlin:kotlin-allopen:$kotlin_version"
        classpath "org.jetbrains.kotlin:kotlin-noarg:$kotlin_version"
        //noinspection DifferentKotlinGradleVersion
        classpath "org.jetbrains.kotlin:kotlin-gradle-plugin:$kotlin_version"
        classpath group: 'org.hibernate.build.gradle', name: 'gradle-maven-publish-auth', version: '2.0.1'
        classpath "org.jetbrains.dokka:dokka-gradle-plugin:0.9.17"
    }
}

group 'me.jiangcai.common'
version '1.0-SNAPSHOT'


subprojects {

    apply plugin: 'kotlin'
    apply plugin: 'java'
    apply plugin: 'maven'
    apply plugin: 'idea'
//    apply from: '../testFixtures.gradle'
    apply plugin: 'maven-publish'
    apply plugin: 'maven-publish-auth'
    apply plugin: 'org.jetbrains.dokka'

    repositories {
        maven {
            url "http://maven.aliyun.com/nexus/content/groups/public"
        }
        mavenCentral()
        maven {
            url 'http://repo.mingshz.com/content/groups/public'
        }
    }

    dependencies {
        compile "org.jetbrains.kotlin:kotlin-stdlib-jdk8:$kotlin_version"
//        dokkaRuntime "org.jetbrains.dokka:dokka-fatjar:0.9.16"
    }

    compileKotlin {
        kotlinOptions.jvmTarget = "1.8"
    }
    compileTestKotlin {
        kotlinOptions.jvmTarget = "1.8"
    }

    publishing {
        publications {
            maven(MavenPublication) {
                from components.java
                artifact sourceJar
                artifact packageJavadoc
            }
        }
        repositories {
            maven {
                name = "mingshz-nexus"
                def releasesRepoUrl = "http://repo.mingshz.com/content/repositories/releases/"
                def snapshotsRepoUrl = "http://repo.mingshz.com/content/repositories/snapshots/"
                url = version.endsWith('SNAPSHOT') ? snapshotsRepoUrl : releasesRepoUrl
            }
        }
    }

//    https://github.com/Kotlin/dokka
    dokka {
        jdkVersion = 8
        // Use to include or exclude non public members.
        includeNonPublic = false

        // Do not output deprecated members. Applies globally, can be overridden by packageOptions
        skipDeprecated = false

        // Emit warnings about not documented members. Applies globally, also can be overridden by packageOptions
        reportUndocumented = true
    }

//    javadoc {
//        source = sourceSets.main.allJava
//        classpath = configurations.compileClasspath
//
//        options
//                {
//                    setMemberLevel JavadocMemberLevel.PUBLIC
//                    setAuthor true
//
//                    links "https://docs.oracle.com/javase/8/docs/api/"
//                }
//    }

    task sourceJar(type: Jar) {
        classifier = 'sources'
        from sourceSets.main.allSource
    }

    task packageJavadoc(type: Jar) {
        from dokka as Object
        classifier = 'javadoc'
    }

}